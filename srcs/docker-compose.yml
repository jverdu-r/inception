version: "3.8"

services:
  init:
    build:
      context: ./init
      dockerfile: Dockerfile
    volumes:
      - type: bind
        source: /home/dungeonmaster/Documentos/inception
        target: /home/dungeonmaster/Documentos/inception
    command: /bin/true

  mariadb:
    image: mariadb:latest
    container_name: mariadb
    restart: always
    environment:
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - my-network
    depends_on:
      - init

  wordpress:
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    image: wordpress-custom  # You can give a name to the image
    container_name: wordpress
    restart: always
    environment:
      WORDPRESS_DB_HOST: "mariadb"
      WORDPRESS_DB_USER: "${MYSQL_USER}"
      WORDPRESS_DB_PASSWORD: "${MYSQL_PASSWORD}"
      WORDPRESS_DB_NAME: "${MYSQL_DATABASE}"
    volumes:
      - wordpress_data:/var/www/wordpress
      - wp_files:/var/www/html
    depends_on:
      - mariadb
      - init
    networks:
      - my-network
    user: 1000:1000  # Replace 1000 with your actual user ID

  nginx:
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    container_name: nginx
    restart: always
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - wordpress_data:/var/www/wordpress
      - wp_files:/var/www/html
      - nginx_conf:/etc/nginx/conf.d
      - ./srcs/ssl_certs:/etc/nginx/ssl  # Corrected path
    depends_on:
      - wordpress
      - init
    networks:
      - my-network
    command: ["nginx", "-g", "daemon off;"]

networks:
  my-network:
    driver: bridge

volumes:
  db_data:
  wordpress_data:
  wp_files:
  nginx_conf:
